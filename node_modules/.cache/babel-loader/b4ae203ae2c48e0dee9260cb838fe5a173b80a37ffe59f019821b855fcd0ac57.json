{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\badim\\\\IdeaProjects\\\\podnet\\\\src\\\\components\\\\Chat\\\\MessageHistory.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Paper, List, ListItem, TextField, IconButton, Typography, Box } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport { Client } from '@stomp/stompjs';\nimport api from '../../api/api';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageHistory = ({\n  chatId\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const {\n    user\n  } = useAuth();\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (!chatId) return;\n    const fetchMessages = async () => {\n      try {\n        const {\n          data\n        } = await api.get(`/api/chats/${chatId}/messages`);\n        setMessages(data);\n      } catch (err) {\n        console.error('Error loading messages:', err);\n      }\n    };\n    fetchMessages();\n    const stompClient = new Client({\n      brokerURL: 'ws://localhost:8181/ws',\n      reconnectDelay: 5000,\n      onConnect: () => {\n        stompClient.subscribe(`/topic/chat/${chatId}`, message => {\n          const newMsg = JSON.parse(message.body);\n          setMessages(prev => [...prev, newMsg]);\n        });\n      }\n    });\n    stompClient.activate();\n    return () => stompClient.deactivate();\n  }, [chatId]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = async () => {\n    if (!newMessage.trim()) return;\n    try {\n      await api.post(`/api/chats/${chatId}/messages`, {\n        content: newMessage\n      });\n      setNewMessage('');\n    } catch (err) {\n      console.error('Error sending message:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      height: '80vh',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 1,\n        overflowY: 'auto',\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            justifyContent: message.author.id === user.id ? 'flex-end' : 'flex-start',\n            alignItems: 'flex-start'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              backgroundColor: message.author.id === user.id ? '#1976d2' : '#e0e0e0',\n              color: message.author.id === user.id ? 'white' : 'black',\n              p: 1.5,\n              borderRadius: 2,\n              maxWidth: '70%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                display: 'block',\n                textAlign: 'right',\n                color: message.author.id === user.id ? 'rgba(255,255,255,0.7)' : 'rgba(0,0,0,0.5)'\n              },\n              children: new Date(message.timestamp).toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        borderTop: '1px solid #e0e0e0',\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        placeholder: \"Type a message...\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && handleSendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        onClick: handleSendMessage,\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(MessageHistory, \"XxbTzGbw3X+RJBLWwAZkFAMzNnI=\", false, function () {\n  return [useAuth];\n});\n_c = MessageHistory;\nexport default MessageHistory;\nvar _c;\n$RefreshReg$(_c, \"MessageHistory\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Paper","List","ListItem","TextField","IconButton","Typography","Box","SendIcon","Client","api","useAuth","jsxDEV","_jsxDEV","MessageHistory","chatId","_s","messages","setMessages","newMessage","setNewMessage","user","messagesEndRef","fetchMessages","data","get","err","console","error","stompClient","brokerURL","reconnectDelay","onConnect","subscribe","message","newMsg","JSON","parse","body","prev","activate","deactivate","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","post","content","elevation","sx","height","display","flexDirection","children","flex","overflowY","p","map","justifyContent","author","id","alignItems","backgroundColor","color","borderRadius","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","variant","textAlign","Date","timestamp","toLocaleTimeString","hour","minute","ref","borderTop","fullWidth","placeholder","value","onChange","e","target","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/badim/IdeaProjects/podnet/src/components/Chat/MessageHistory.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport {\r\n    Paper,\r\n    List,\r\n    ListItem,\r\n    TextField,\r\n    IconButton,\r\n    Typography,\r\n    Box\r\n} from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { Client } from '@stomp/stompjs';\r\nimport api from '../../api/api';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst MessageHistory = ({ chatId }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const { user } = useAuth();\r\n    const messagesEndRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!chatId) return;\r\n\r\n        const fetchMessages = async () => {\r\n            try {\r\n                const { data } = await api.get(`/api/chats/${chatId}/messages`);\r\n                setMessages(data);\r\n            } catch (err) {\r\n                console.error('Error loading messages:', err);\r\n            }\r\n        };\r\n        fetchMessages();\r\n\r\n        const stompClient = new Client({\r\n            brokerURL: 'ws://localhost:8181/ws',\r\n            reconnectDelay: 5000,\r\n            onConnect: () => {\r\n                stompClient.subscribe(`/topic/chat/${chatId}`, (message) => {\r\n                    const newMsg = JSON.parse(message.body);\r\n                    setMessages(prev => [...prev, newMsg]);\r\n                });\r\n            }\r\n        });\r\n        stompClient.activate();\r\n\r\n        return () => stompClient.deactivate();\r\n    }, [chatId]);\r\n\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    }, [messages]);\r\n\r\n    const handleSendMessage = async () => {\r\n        if (!newMessage.trim()) return;\r\n\r\n        try {\r\n            await api.post(`/api/chats/${chatId}/messages`, {\r\n                content: newMessage\r\n            });\r\n            setNewMessage('');\r\n        } catch (err) {\r\n            console.error('Error sending message:', err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Paper elevation={3} sx={{ height: '80vh', display: 'flex', flexDirection: 'column' }}>\r\n            <Box sx={{ flex: 1, overflowY: 'auto', p: 2 }}>\r\n                <List>\r\n                    {messages.map(message => (\r\n                        <ListItem\r\n                            key={message.id}\r\n                            sx={{\r\n                                justifyContent: message.author.id === user.id ? 'flex-end' : 'flex-start',\r\n                                alignItems: 'flex-start'\r\n                            }}\r\n                        >\r\n                            <Box sx={{\r\n                                backgroundColor: message.author.id === user.id ? '#1976d2' : '#e0e0e0',\r\n                                color: message.author.id === user.id ? 'white' : 'black',\r\n                                p: 1.5,\r\n                                borderRadius: 2,\r\n                                maxWidth: '70%'\r\n                            }}>\r\n                                <Typography>{message.content}</Typography>\r\n                                <Typography variant=\"caption\" sx={{\r\n                                    display: 'block',\r\n                                    textAlign: 'right',\r\n                                    color: message.author.id === user.id ? 'rgba(255,255,255,0.7)' : 'rgba(0,0,0,0.5)'\r\n                                }}>\r\n                                    {new Date(message.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                                </Typography>\r\n                            </Box>\r\n                        </ListItem>\r\n                    ))}\r\n                    <div ref={messagesEndRef} />\r\n                </List>\r\n            </Box>\r\n\r\n            <Box sx={{ p: 2, borderTop: '1px solid #e0e0e0', display: 'flex', alignItems: 'center' }}>\r\n                <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Type a message...\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\r\n                />\r\n                <IconButton color=\"primary\" onClick={handleSendMessage}>\r\n                    <SendIcon />\r\n                </IconButton>\r\n            </Box>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default MessageHistory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}